import asyncio
import websockets
import json
import random
import time

# üü¢ C·∫•u h√¨nh thi·∫øt b·ªã gi·∫£
USER_ID = "0aa615bb-68a4-4a46-a461-ecd7fa9b1432"
DEVICE_ID = "0aa615bb-68a4-4a46-a461-ecd7fa9b1432_6"
FIRMWARE_VERSION = "1.0.0"

# ƒê·ªãa ch·ªâ WebSocket server
# Thay b·∫±ng IP ho·∫∑c domain n·∫øu ch·∫°y online
WS_URL = f"ws://localhost:8765/ws/{USER_ID}"

# Gi·∫£ l·∫≠p qu√° tr√¨nh OTA


async def handle_ota(data, websocket):
    print("üì• Nh·∫≠n OTA t·ª´ server:")
    print(json.dumps(data, indent=2, ensure_ascii=False))

    version = data.get("version", "unknown")

    # üïì Gi·∫£ l·∫≠p th·ªùi gian t·∫£i firmware
    print(f"‚¨áÔ∏è ƒêang t·∫£i firmware phi√™n b·∫£n {version} ...")
    await asyncio.sleep(2)

    # ‚úÖ Gi·∫£ l·∫≠p OTA th√†nh c√¥ng ho·∫∑c th·∫•t b·∫°i ng·∫´u nhi√™n
    success = random.choice([True, True, True, False])  # 75% th√†nh c√¥ng

    if success:
        print("‚úÖ ƒê√£ c·∫≠p nh·∫≠t firmware th√†nh c√¥ng.")
        await websocket.send(json.dumps({
            "command": "UPDATE_FIRMWARE_SUCCESSFULLY",
            "device_id": DEVICE_ID,
            "version": version
        }))
    else:
        print("‚ùå C·∫≠p nh·∫≠t firmware th·∫•t b·∫°i.")
        await websocket.send(json.dumps({
            "command": "UPDATE_FIRMWARE_FAILED",
            "device_id": DEVICE_ID,
            "version": version,
            "error_code": "crc_mismatch",
            "reason": "Checksum kh√¥ng kh·ªõp khi ghi flash"
        }))


async def fake_esp():
    try:
        async with websockets.connect(WS_URL) as websocket:
            print(f"üîå K·∫øt n·ªëi t·ªõi WebSocket: {WS_URL}")

            # G·ª≠i l·ªánh REGISTER_DEVICE
            await websocket.send(json.dumps({
                "command": "REGISTER_DEVICE",
                "device_id": DEVICE_ID,
                "version": FIRMWARE_VERSION
            }))

            # Ch·ªù c√°c th√¥ng ƒëi·ªáp t·ª´ server
            while True:
                message = await websocket.recv()
                print(f"\nüì® Nh·∫≠n t·ª´ server:\n{message}")

                try:
                    data = json.loads(message)
                    command = data.get("command")

                    if command == "UPDATE_FIRMWARE":
                        await handle_ota(data, websocket)

                    elif command == "ACK_SUCCESS":
                        print("üéâ Server x√°c nh·∫≠n c·∫≠p nh·∫≠t th√†nh c√¥ng.")

                    elif command == "ACK_FAILED":
                        print("‚ö†Ô∏è Server x√°c nh·∫≠n c·∫≠p nh·∫≠t th·∫•t b·∫°i.")

                    else:
                        print("‚ö†Ô∏è L·ªánh kh√¥ng x√°c ƒë·ªãnh t·ª´ server:", command)

                except Exception as e:
                    print("‚ùå L·ªói x·ª≠ l√Ω message:", e)

    except Exception as e:
        print("‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi t·ªõi WebSocket:", e)

if __name__ == "__main__":
    asyncio.run(fake_esp())
